///////////////////////////////////////////////////////////////////////
// RX, TX buffers
///////////////////////////////////////////////////////////////////////
#define paradox_message_length 37
#define paradox_checksum_length 36
///////////////////////////////////////////////////////////////////////
uint8_t paradox_rx[paradox_message_length];
uint8_t paradox_tx[paradox_message_length];
///////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////
// interval to send status per MQTT
///////////////////////////////////////////////////////////////////////
#define PDHP 30 * 1000  // panel data heartbeat period, 30 sec.
unsigned long pdlh = 0; // panel data last hearbeat
///////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////
// send DEBUG MQTT MESSAGES
///////////////////////////////////////////////////////////////////////
const boolean DEBUG = true;
///////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////
// internal flags
///////////////////////////////////////////////////////////////////////
boolean got_data = false;
boolean got_event = false;
boolean got_mqtt_data = false;
///////////////////////////////////////////////////////////////////////
boolean panel_start_communication = false;
boolean panel_start_communication_response = false;
boolean panel_initialize = false;
boolean panel_connected = false;
///////////////////////////////////////////////////////////////////////
boolean partition_rights_access_1 = false;
boolean partition_rights_access_2 = false;
///////////////////////////////////////////////////////////////////////
boolean error_message = false; // got panel error message
///////////////////////////////////////////////////////////////////////
boolean send_mqtt_status = false;
///////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////
// GENERAL ALARM STATUS
///////////////////////////////////////////////////////////////////////
boolean SIA = false; // System in alarm, bit 2 of command byte
boolean WLC = false; // Winload line connection, bit 1 of command byte
boolean WDC = false; // Winload direct connection, bit 0 of command byte
///////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////
// PANEL COMMAND
///////////////////////////////////////////////////////////////////////
uint8_t command = 0;
uint8_t subcommand = 0;
boolean panel_set_date_time = false;
///////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////
// PANEL DATA
///////////////////////////////////////////////////////////////////////
uint8_t PPI = 0;   // Panel Product ID
uint8_t PFV = 0;   // Panel Firmware Version
uint8_t PFR = 0;   // Panel Firmware Revision
uint8_t PFB = 0;   // Panel Firmware Build
uint8_t PPID1 = 0; // Programmed Panel ID Digit 1&2 [910]
uint8_t PPID2 = 0; // Programmed Panel ID Digit 3&4 [910]
// MG series only
uint8_t TFB = 0;       // Transceiver Firmware Build
uint8_t TF = 0;        // Transceiver Family
uint8_t TFV = 0;       // Transceiver Firmware Version
uint8_t TFR = 0;       // Transceiver Firmware Revision
uint8_t TNFL = 0;      // Transceiver Noise Floor Level
uint8_t THR = 0;       // Transceiver Hardware Revision
boolean NFLTH = false; // Noise Floor Level too high
boolean CCD = false;   // Constant Carrier Detected
///////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////
// general flag for panel status requests
///////////////////////////////////////////////////////////////////////
uint8_t panel_status_request = 0;
///////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////
// PANEL STATUS 0
///////////////////////////////////////////////////////////////////////
#define PS0len 31
boolean panel_status_0_read = false;
uint8_t PS0[PS0len];
///////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////
// PANEL STATUS 1
///////////////////////////////////////////////////////////////////////
#define PS1len 26
boolean panel_status_1_read = false;
uint8_t PS1[PS1len];
///////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////
// PANEL STATUS 2
///////////////////////////////////////////////////////////////////////
#define PS2len 32
boolean panel_status_2_read = false;
uint8_t PS2[PS2len];
///////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////
// PANEL STATUS 3
///////////////////////////////////////////////////////////////////////
#define PS3len 32
boolean panel_status_3_read = false;
uint8_t PS3[PS3len];
///////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////
// PANEL STATUS 4
///////////////////////////////////////////////////////////////////////
#define PS4len 26
boolean panel_status_4_read = false;
uint8_t PS4[PS4len];
///////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////
// PANEL STATUS 5
///////////////////////////////////////////////////////////////////////
#define PS5len 4
boolean panel_status_5_read = false;
uint8_t PS5[PS5len];
///////////////////////////////////////////////////////////////////////
